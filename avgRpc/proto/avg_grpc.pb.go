// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.5
// source: avg.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AvgServiceClient is the client API for AvgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AvgServiceClient interface {
	GetAvg(ctx context.Context, opts ...grpc.CallOption) (AvgService_GetAvgClient, error)
}

type avgServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAvgServiceClient(cc grpc.ClientConnInterface) AvgServiceClient {
	return &avgServiceClient{cc}
}

func (c *avgServiceClient) GetAvg(ctx context.Context, opts ...grpc.CallOption) (AvgService_GetAvgClient, error) {
	stream, err := c.cc.NewStream(ctx, &AvgService_ServiceDesc.Streams[0], "/avg.AvgService/GetAvg", opts...)
	if err != nil {
		return nil, err
	}
	x := &avgServiceGetAvgClient{stream}
	return x, nil
}

type AvgService_GetAvgClient interface {
	Send(*AvgRequest) error
	CloseAndRecv() (*AvgResponse, error)
	grpc.ClientStream
}

type avgServiceGetAvgClient struct {
	grpc.ClientStream
}

func (x *avgServiceGetAvgClient) Send(m *AvgRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *avgServiceGetAvgClient) CloseAndRecv() (*AvgResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AvgResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AvgServiceServer is the server API for AvgService service.
// All implementations must embed UnimplementedAvgServiceServer
// for forward compatibility
type AvgServiceServer interface {
	GetAvg(AvgService_GetAvgServer) error
	mustEmbedUnimplementedAvgServiceServer()
}

// UnimplementedAvgServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAvgServiceServer struct {
}

func (UnimplementedAvgServiceServer) GetAvg(AvgService_GetAvgServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAvg not implemented")
}
func (UnimplementedAvgServiceServer) mustEmbedUnimplementedAvgServiceServer() {}

// UnsafeAvgServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AvgServiceServer will
// result in compilation errors.
type UnsafeAvgServiceServer interface {
	mustEmbedUnimplementedAvgServiceServer()
}

func RegisterAvgServiceServer(s grpc.ServiceRegistrar, srv AvgServiceServer) {
	s.RegisterService(&AvgService_ServiceDesc, srv)
}

func _AvgService_GetAvg_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AvgServiceServer).GetAvg(&avgServiceGetAvgServer{stream})
}

type AvgService_GetAvgServer interface {
	SendAndClose(*AvgResponse) error
	Recv() (*AvgRequest, error)
	grpc.ServerStream
}

type avgServiceGetAvgServer struct {
	grpc.ServerStream
}

func (x *avgServiceGetAvgServer) SendAndClose(m *AvgResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *avgServiceGetAvgServer) Recv() (*AvgRequest, error) {
	m := new(AvgRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AvgService_ServiceDesc is the grpc.ServiceDesc for AvgService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AvgService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "avg.AvgService",
	HandlerType: (*AvgServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAvg",
			Handler:       _AvgService_GetAvg_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "avg.proto",
}
